name: Build and Push Docker Image

on:
  pull_request:
    types: [closed]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t valerykhirin/github-image-push-actions:latest .
          echo "Image built!"
      # - name: Run Snyk to check Docker image for vulnerabilities
      #   continue-on-error: true
      #   uses: snyk/actions/docker@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     image: valerykhirin/github-image-push-actions:latest
      #     json: true
      #     args: --severity-threshold=high

      - name: Run Snyk to check vulnerabilities in Python
        continue-on-error: true
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          json: true
          args: --severity-threshold=high

      - name: Extract Snyk scan status
        uses: sergeysova/jq-action@v2
        id: snyk_success
        with:
          cmd: 'if [[ "$(jq .ok snyk.json -r)" == "true" ]]; then echo ":white_check_mark:"; else echo ":x:"; fi'

      - name: Extract Snyk scan summary
        uses: sergeysova/jq-action@v2
        id: summary
        with:
          cmd: 'jq .summary snyk.json -r'

      - name: Extract Snyk scan vulnerability
        uses: sergeysova/jq-action@v2
        id: vulnerability
        with:
          cmd: 'jq .remediation.unresolved[0].description snyk.json -r'
          multiline: true   

      - name: Show description
        id: description
        run: |
          description="${{ steps.vulnerability.outputs.value }}"
          IFS=$'\n' for desc in $description; do
            echo "$desc"
          done

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            SNYK scan results: \
            ${{ steps.snyk_success.outputs.value }} ${{ steps.summary.outputs.value }}
            ```markdown
            ${{ steps.description.outputs.value }}
            ```
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Push Docker image
        run: |
          docker push valerykhirin/github-image-push-actions:latest
          echo "Image is pushed to docker hub with the tag latest"