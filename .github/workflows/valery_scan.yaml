name: getrelease

on: 
  pull_request:

jobs:
  getrelease:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3      

      - name: Build Docker image
        run: |
          docker build -t valerykhirin/github-image-push-actions:latest .
          docker images | awk '{print $1":"$2}' | grep -v REPOSITORY >> docker_images.txt
          cat docker_images.txt
          echo "Image built!"

      - uses: snyk/actions/setup@master
      - name: Scan
        run: |
          touch result.txt
          echo "snyk test results:" > result.txt
          readarray -t imageslist < docker_images.txt
          snyk auth ${{ secrets.SNYK_TOKEN }}
          for image_name in "${imageslist[@]}"; do
            echo "$image_name: " >> result.txt
            snyk container test  $image_name  --severity-threshold=high --json-file-output=snyk.json || true
            if [[ ! -s snyk.json ]]; then
              echo "Error: snyk.json is empty or does not exist"
              echo "Contents of snyk.json:"
              cat snyk.json
              exit 1
            fi
            echo "print snyk:"
            jq ' .summary   ' snyk.json  | sed 's|[",]||g' >> result.txt
            jq ' .vulnarabilities[] | "ID: \(.id)"' snyk.json >> result.txt
            jq ' .vulnarabilities[] | "Title: \(.title)"' snyk.json >> result.txt
            jq ' .vulnarabilities[] | "Severity: \(.severity)"' snyk.json >> result.txt
            # jq ' .vulnarabilities[] | "Link: https://snyk.io/vuln/\(.id)"' snyk.json >> result.txt
            echo "Result txt:"
            cat result.txt
          done
          cat result.txt | sed 's|[{"},]||g' > final_result.txt



      - name: Update snyk result as pr comment
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ always() }}
        with:
          filePath: final_result.txt